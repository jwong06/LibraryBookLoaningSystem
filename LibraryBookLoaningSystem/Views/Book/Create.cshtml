@using LibraryBookLoaningSystem.ViewModels;
@model LibraryBookLoaningSystem.Models.Books;
@{
    ViewData["Title"] = "Add Book";
}

<h1>Add Books</h1>
<hr />
<div class="row">
    <div class="col-6">
        <form method="post">
            <div asp-asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="BookTitle" class="control-label"></label>
                <input asp-for="BookTitle" class="form-control" />
                <span asp-validation-for="BookTitle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BookDescription" class="control-label"></label>
                <input asp-for="BookDescription" class="form-control" />
                <span asp-validation-for="BookDescription" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BookAuthor" class="control-label"></label>
                <input asp-for="BookAuthor" class="form-control" />
                <span asp-validation-for="BookAuthor" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BookCopies" class="control-label"></label>
                <input asp-for="BookCopies" class="form-control" />
                <span asp-validation-for="BookCopies" class="text-danger"></span>
            </div>
            <div class="form-group mt-2">
                <a asp-controller="Book" asp-action="Index" class="btn btn-danger">Back</a>
                <input type="submit" value="Create "class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");
    }
}